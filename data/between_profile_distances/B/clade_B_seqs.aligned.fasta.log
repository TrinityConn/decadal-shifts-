IQ-TREE multicore version 2.2.2.3 COVID-edition for Linux 64-bit built Apr  7 2023
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    64923e67824f (AVX512, FMA3, 62 GB RAM)
Command: iqtree -T AUTO --threads-max 2 -s /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta
Seed:    141414 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Fri Jul 11 22:52:00 2025
Kernel:  AVX+FMA - auto-detect threads (36 CPU cores detected)

Reading alignment file /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta ... Fasta format detected
Reading fasta file: done in 0.000874043 secs using 80.32% CPU
Alignment most likely contains DNA/RNA sequences
Constructing alignment: done in 0.00077796 secs using 1395% CPU
Alignment has 122 sequences with 375 columns, 199 distinct patterns
43 parsimony-informative, 57 singleton sites, 275 constant sites
         Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 0.000102043 secs using 3185% CPU
   1  22017     29.33%    passed     99.43%
   2  29213     28.27%    passed     99.78%
   3  89127     28.27%    passed     99.78%
   4  2768937   29.33%    passed     99.90%
   5  2768938   27.73%    passed     99.98%
   6  29227     28.00%    passed     96.15%
   7  89135     28.27%    passed     99.98%
   8  5737009   30.93%    passed     98.38%
   9  5737019   37.87%    passed     98.33%
  10  5737020   37.33%    passed     99.72%
  11  5737028   28.27%    passed     97.15%
  12  89166     28.27%    passed     99.78%
  13  2768977   28.27%    passed     99.39%
  14  51798     28.27%    passed     98.91%
  15  308310    28.27%    passed     99.97%
  16  29275     28.27%    passed     99.98%
  17  89691     28.27%    passed     99.88%
  18  53344     28.27%    passed     94.51%
  19  29800     28.27%    passed     99.78%
  20  29802     28.27%    passed     99.98%
  21  29806     28.27%    passed     99.78%
  22  1390195   34.40%    passed     99.94%
  23  1390196   28.27%    passed     99.96%
  24  1390197   34.40%    passed     99.72%
  25  5737091   37.33%    passed     99.30%
  26  68229     28.27%    passed     99.10%
  27  37517     28.27%    passed     99.86%
  28  37518     28.27%    passed     98.15%
  29  37520     28.27%    passed     99.11%
  30  37521     28.27%    passed     99.63%
  31  89232     28.27%    passed     99.92%
  32  89233     28.27%    passed     99.98%
  33  29332     28.27%    passed     99.85%
  34  37524     28.27%    passed     99.97%
  35  37526     30.93%    passed     95.61%
  36  37527     28.53%    passed     99.95%
  37  89237     28.27%    passed     99.48%
  38  1390227   27.73%    passed     99.99%
  39  1390229   28.00%    passed     99.91%
  40  2769048   38.93%    passed     96.74%
  41  29343     28.27%    passed     98.91%
  42  693411    36.00%    passed     98.67%
  43  693415    28.53%    passed     99.96%
  44  29359     28.27%    passed     99.36%
  45  29360     28.27%    passed     99.36%
  46  64698     34.40%    passed     98.84%
  47  37563     28.27%    passed     99.98%
  48  44224     27.20%    passed     99.87%
  49  44226     28.27%    passed     99.86%
  50  1390800   28.53%    passed     99.95%
  51  2156752   34.40%    passed     96.63%
  52  51922     28.00%    passed     99.52%
  53  29395     28.27%    passed     99.78%
  54  51923     28.00%    passed     98.60%
  55  89810     28.27%    passed     99.92%
  56  89812     28.27%    passed     99.86%
  57  37591     28.27%    passed     99.86%
  58  695008    36.00%    passed    100.00%
  59  25829     28.27%    passed     99.78%
  60  29424     28.27%    passed     99.85%
  61  30454     28.53%    passed     99.95%
  62  89854     28.27%    passed     99.76%
  63  29476     28.27%    passed     99.36%
  64  29481     28.27%    passed     99.98%
  65  62764     28.00%    passed     99.54%
  66  62765     28.27%    passed     99.48%
  67  1913651   28.27%    passed     98.90%
  68  29495     28.27%    passed     99.85%
  69  29499     28.27%    passed     99.36%
  70  698180    28.53%    passed     99.93%
  71  694600    28.27%    passed     98.90%
  72  43338     28.27%    passed     99.11%
  73  25424     28.27%    passed     99.78%
  74  4946      28.27%    passed     99.97%
  75  1402208   27.20%    passed     99.87%
  76  1402209   30.67%    passed     98.48%
  77  22371     29.33%    passed     95.60%
  78  30572     28.27%    passed     99.78%
  79  3373435   28.27%    passed     97.26%
  80  3373442   28.27%    passed     95.95%
  81  3373446   28.27%    passed     98.43%
  82  3373448   28.80%    passed     99.96%
  83  3373449   17.60%    passed     98.77%
  84  37772     28.00%    passed     99.91%
  85  2151311   27.20%    passed     99.88%
  86  1389972   27.47%    passed     99.96%
  87  1389974   28.00%    passed    100.00%
  88  59288     36.00%    passed     99.78%
  89  1389977   31.20%    passed     99.93%
  90  21914     29.33%    passed     98.75%
  91  1389979   28.27%    passed     99.78%
  92  1389981   28.27%    passed     99.16%
  93  1389982   34.13%    passed     93.58%
  94  1389983   31.73%    passed     99.92%
  95  1389984   32.00%    passed     99.26%
  96  1389996   29.87%    passed     98.03%
  97  1389997   33.07%    passed     97.37%
  98  30126     28.27%    passed     99.98%
  99  1389998   29.07%    passed     98.59%
 100  1389999   27.20%    passed     99.34%
 101  1390000   29.07%    passed     98.83%
 102  30130     28.27%    passed     99.36%
 103  90035     28.27%    passed     99.71%
 104  1390001   28.00%    passed     99.93%
 105  29621     28.27%    passed     99.85%
 106  1390002   28.00%    passed     98.25%
 107  1390003   21.33%    passed     99.06%
 108  63929     31.73%    passed     97.57%
 109  37826     28.27%    passed     99.30%
 110  367051    34.40%    passed     99.76%
 111  1390034   26.93%    passed     99.43%
 112  1390035   22.40%    passed     99.19%
 113  37844     29.33%    passed     97.74%
 114  53205     28.27%    passed     99.78%
 115  29665     28.27%    passed     99.85%
 116  89570     28.27%    passed     98.90%
 117  61924     28.27%    passed     99.14%
 118  61925     28.27%    passed     97.55%
 119  1390055   31.73%    passed     99.10%
 120  1390058   28.27%    passed     99.30%
 121  45548     28.27%    passed     99.11%
 122  1390061   25.60%    passed     99.59%
****  TOTAL     29.10%  0 sequences failed composition chi2 test (p-value<5%; df=3)
Checking for duplicate sequences: done in 0.000352144 secs using 3296% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.003 seconds
Measuring multi-threading efficiency up to 2 CPU cores
Increase to 10 rounds for branch lengths
52 trees examined
Threads: 1 / Time: 2.021 sec / Speedup: 1.000 / Efficiency: 100% / LogL: -2231
Threads: 2 / Time: 1.712 sec / Speedup: 1.181 / Efficiency: 59% / LogL: -2231
Determining AUTO threadcount: done in 3.73323 secs using 306.2% CPU
BEST NUMBER OF THREADS: 2

Perform fast likelihood tree search using GTR+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.109127 secs using 199.7% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -1441.066
Optimal log-likelihood: -1440.862
Rate parameters:  A-C: 0.64339  A-G: 2.56357  A-T: 1.11666  C-G: 0.24673  C-T: 2.53948  G-T: 1.00000
Base frequencies:  A: 0.166  C: 0.268  G: 0.259  T: 0.308
Proportion of invariable sites: 0.325
Gamma shape alpha: 17.309
Parameters optimization took 1 rounds (0.031 sec)
Time for fast ML tree search: 0.241 seconds

NOTE: ModelFinder requires 8 MB RAM!
ModelFinder will test up to 484 DNA models (sample size: 375) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  GTR+F         1442.385     249 3382.770     4378.770     4360.574
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  GTR+F+I       1440.581     250 3381.161     4393.258     4362.893
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  GTR+F+G4      1439.018     250 3378.035     4390.132     4359.767
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  GTR+F+I+G4    1440.674     251 3383.347     4411.835     4369.005
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  GTR+F+R2      1439.449     251 3380.897     4409.385     4366.556
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  GTR+F+R3      1438.935     253 3383.871     4446.053     4377.383
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  GTR+F+I+R2    1440.237     252 3384.474     4429.654     4374.059
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  GTR+F+I+R3    1439.653     254 3387.307     4466.807     4384.746
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  SYM           1454.174     246 3400.348     4349.754     4366.371
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 24  SYM+I         1451.893     247 3397.786     4362.448     4367.737
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 25  SYM+G4        1450.444     247 3394.887     4359.549     4364.838
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 26  SYM+I+G4      1451.841     248 3399.683     4379.873     4373.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  SYM+R2        1450.852     248 3397.704     4377.894     4371.582
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  TVM+F         1442.394     248 3380.787     4360.978     4354.665
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  TVM+F+I       1440.583     249 3379.165     4375.165     4356.970
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  TVM+F+G4      1439.025     249 3376.050     4372.050     4353.855
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  TVM+F+I+G4    1440.676     250 3381.352     4393.448     4363.083
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 49  TVM+F+R2      1439.453     250 3378.907     4391.004     4360.638
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  TVMe          1455.194     245 3400.388     4334.806     4362.485
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  TVMe+I        1453.061     246 3398.123     4347.529     4364.146
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  TVMe+G4       1451.540     246 3395.080     4344.486     4361.104
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  TVMe+I+G4     1453.000     247 3400.000     4364.662     4369.951
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  TVMe+R2       1451.992     247 3397.985     4362.646     4367.935
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 89  TIM3+F        1443.795     247 3381.589     4346.251     4351.540
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 90  TIM3+F+I      1442.002     248 3380.005     4360.195     4353.883
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 91  TIM3+F+G4     1440.496     248 3376.993     4357.183     4350.871
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  TIM3+F+I+G4   1442.111     249 3382.222     4378.222     4360.026
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  TIM3+F+R2     1440.914     249 3379.827     4375.827     4357.632
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  TIM3e         1455.016     244 3398.032     4317.725     4356.202
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  TIM3e+I       1452.717     245 3395.434     4329.853     4357.531
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  TIM3e+G4      1451.276     245 3392.552     4326.970     4354.649
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  TIM3e+I+G4    1452.660     246 3397.320     4346.727     4363.344
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
115  TIM3e+R2      1451.686     246 3395.372     4344.779     4361.396
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  TIM2+F        1447.202     247 3388.404     4353.066     4358.355
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  TIM2+F+I      1445.708     248 3387.417     4367.607     4361.294
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  TIM2+F+G4     1444.145     248 3384.290     4364.480     4358.167
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  TIM2+F+I+G4   1445.798     249 3389.597     4385.597     4367.401
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  TIM2+F+R2     1444.513     249 3387.026     4383.026     4364.831
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
155  TIM2e         1459.639     244 3407.279     4326.971     4365.449
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
156  TIM2e+I       1457.903     245 3405.807     4340.226     4367.904
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  TIM2e+G4      1456.455     245 3402.910     4337.329     4365.007
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  TIM2e+I+G4    1458.006     246 3408.012     4357.418     4374.036
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  TIM2e+R2      1456.829     246 3405.658     4355.064     4371.682
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  TIM+F         1446.802     247 3387.605     4352.266     4357.556
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  TIM+F+I       1445.275     248 3386.550     4366.741     4360.428
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
179  TIM+F+G4      1443.761     248 3383.521     4363.712     4357.399
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
180  TIM+F+I+G4    1445.361     249 3388.722     4384.722     4366.526
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
181  TIM+F+R2      1444.124     249 3386.248     4382.248     4364.052
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  TIMe          1458.459     244 3404.919     4324.611     4363.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  TIMe+I        1456.707     245 3403.415     4337.833     4365.511
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  TIMe+G4       1455.255     245 3400.510     4334.929     4362.607
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  TIMe+I+G4     1456.803     246 3405.606     4355.012     4371.630
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  TIMe+R2       1455.602     246 3403.205     4352.611     4369.229
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
221  TPM3u+F       1443.802     246 3379.604     4329.011     4345.628
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  TPM3u+F+I     1442.004     247 3378.008     4342.669     4347.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  TPM3u+F+G4    1440.503     247 3375.006     4339.667     4344.957
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  TPM3u+F+I+G4  1442.112     248 3380.225     4360.415     4354.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  TPM3u+F+R2    1440.917     248 3377.835     4358.025     4351.712
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  TPM3          1456.036     243 3398.073     4303.294     4352.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
244  TPM3+I        1453.883     244 3395.766     4315.459     4353.936
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
245  TPM3+G4       1452.369     244 3392.738     4312.430     4350.908
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
246  TPM3+I+G4     1453.815     245 3397.631     4332.049     4359.727
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
247  TPM3+R2       1452.823     245 3395.647     4330.065     4357.744
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  TPM2u+F       1447.211     246 3386.422     4335.828     4352.446
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  TPM2u+F+I     1445.711     247 3385.423     4350.084     4355.373
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  TPM2u+F+G4    1444.153     247 3382.306     4346.967     4352.257
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  TPM2u+F+I+G4  1445.802     248 3387.604     4367.794     4361.482
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  TPM2u+F+R2    1444.519     248 3385.037     4365.228     4358.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  TPM2          1460.661     243 3407.321     4312.543     4361.564
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  TPM2+I        1459.018     244 3406.037     4325.729     4364.207
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  TPM2+G4       1457.534     244 3403.069     4322.761     4361.239
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  TPM2+I+G4     1459.119     245 3408.239     4342.658     4370.336
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  TPM2+R2       1457.933     245 3405.866     4340.285     4367.963
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
309  K3Pu+F        1446.809     246 3385.619     4335.025     4351.643
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
310  K3Pu+F+I      1445.278     247 3384.555     4349.217     4354.506
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
311  K3Pu+F+G4     1443.767     247 3381.533     4346.194     4351.484
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
312  K3Pu+F+I+G4   1445.363     248 3386.726     4366.916     4360.603
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  K3Pu+F+R2     1444.127     248 3384.255     4364.445     4358.133
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  K3P           1459.480     243 3404.961     4310.182     4359.204
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  K3P+I         1457.831     244 3403.661     4323.354     4361.831
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  K3P+G4        1456.332     244 3400.664     4320.356     4358.834
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  K3P+I+G4      1457.924     245 3405.848     4340.267     4367.945
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
335  K3P+R2        1456.712     245 3403.424     4337.842     4365.521
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  TN+F          1447.847     246 3387.694     4337.100     4353.718
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  TN+F+I        1446.345     247 3386.690     4351.352     4356.641
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  TN+F+G4       1444.840     247 3383.680     4348.342     4353.631
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  TN+F+I+G4     1446.448     248 3388.896     4369.086     4362.773
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  TN+F+R2       1445.187     248 3386.374     4366.564     4360.251
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
375  TNe           1459.665     243 3405.331     4310.552     4359.574
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
376  TNe+I         1457.921     244 3403.842     4323.534     4362.012
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
377  TNe+G4        1456.475     244 3400.950     4320.642     4359.120
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  TNe+I+G4      1458.021     245 3406.041     4340.460     4368.138
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  TNe+R2        1456.849     245 3403.698     4338.116     4365.794
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  HKY+F         1447.855     245 3385.711     4320.129     4347.808
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  HKY+F+I       1446.348     246 3384.696     4334.102     4350.719
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  HKY+F+G4      1444.846     246 3381.693     4331.099     4347.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
400  HKY+F+I+G4    1446.450     247 3386.900     4351.561     4356.851
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
401  HKY+F+R2      1445.191     247 3384.382     4349.044     4354.333
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  K2P           1460.687     242 3405.375     4296.375     4355.691
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  K2P+I         1459.035     243 3404.070     4309.291     4358.313
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  K2P+G4        1457.552     243 3401.104     4306.325     4355.347
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  K2P+I+G4      1459.133     244 3406.265     4325.958     4364.435
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  K2P+R2        1457.951     244 3403.902     4323.595     4362.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
441  F81+F         1472.530     244 3433.061     4352.753     4391.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
442  F81+F+I       1470.995     245 3431.990     4366.409     4394.087
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  F81+F+G4      1469.439     245 3428.877     4363.296     4390.974
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  F81+F+I+G4    1471.122     246 3434.243     4383.649     4400.267
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  F81+F+R2      1469.867     246 3431.734     4381.140     4397.757
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  JC            1486.410     241 3454.821     4331.844     4401.210
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  JC+I          1484.780     242 3453.561     4344.561     4403.877
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  JC+G4         1483.286     242 3450.571     4341.571     4400.887
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
466  JC+I+G4       1484.963     243 3455.926     4361.147     4410.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
467  JC+R2         1483.698     243 3453.395     4358.617     4407.638
Akaike Information Criterion:           TPM3u+F+G4
Corrected Akaike Information Criterion: K2P
Bayesian Information Criterion:         TPM3u+F+G4
Best-fit model: TPM3u+F+G4 chosen according to BIC

All model information printed to /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta.model.gz
CPU time for ModelFinder: 21.385 seconds (0h:0m:21s)
Wall-clock time for ModelFinder: 8.505 seconds (0h:0m:8s)

NOTE: 3 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -1440.503
Optimal log-likelihood: -1440.503
Rate parameters:  A-C: 0.39490  A-G: 2.45600  A-T: 1.00000  C-G: 0.39490  C-T: 2.45600  G-T: 1.00000
Base frequencies:  A: 0.166  C: 0.268  G: 0.259  T: 0.308
Gamma shape alpha: 1.732
Parameters optimization took 1 rounds (0.010 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.030925 secs using 200% CPU
Computing ML distances took 0.030981 sec (of wall-clock time) 0.061921 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 0.000313997 secs using 230.6% CPU
Constructing RapidNJ tree: done in 0.00236392 secs using 313.2% CPU
Computing RapidNJ tree took 0.002709 sec (of wall-clock time) 0.008161 sec (of CPU time)
Log-likelihood of RapidNJ tree: -1472.611
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 0.334 second
Computing log-likelihood of 98 initial trees ... 0.459 seconds
Current best score: -1439.846

Do NNI search on 20 best initial trees
Optimizing NNI: done in 0.0554399 secs using 199.2% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -1437.121
Optimizing NNI: done in 0.036912 secs using 197.5% CPU
Optimizing NNI: done in 0.117924 secs using 200.1% CPU
Optimizing NNI: done in 0.076246 secs using 199.6% CPU
Optimizing NNI: done in 0.01757 secs using 196.7% CPU
Optimizing NNI: done in 0.0818961 secs using 198.9% CPU
Optimizing NNI: done in 0.0372739 secs using 199.3% CPU
Optimizing NNI: done in 0.0682521 secs using 200.5% CPU
Optimizing NNI: done in 0.0372739 secs using 199.3% CPU
Optimizing NNI: done in 0.0382779 secs using 199.3% CPU
Iteration 10 / LogL: -1441.388 / Time: 0h:0m:1s
Optimizing NNI: done in 0.0373042 secs using 196% CPU
Optimizing NNI: done in 0.0544341 secs using 199.2% CPU
Optimizing NNI: done in 0.0713971 secs using 199.4% CPU
Optimizing NNI: done in 0.0832081 secs using 200.5% CPU
Optimizing NNI: done in 0.072504 secs using 199.3% CPU
Optimizing NNI: done in 0.0552871 secs using 199.5% CPU
Optimizing NNI: done in 0.053803 secs using 199.7% CPU
Optimizing NNI: done in 0.125798 secs using 199.8% CPU
Optimizing NNI: done in 0.0701971 secs using 199.7% CPU
Optimizing NNI: done in 0.0953879 secs using 200.5% CPU
Iteration 20 / LogL: -1439.211 / Time: 0h:0m:2s
Finish initializing candidate tree set (20)
Current best tree score: -1437.121 / CPU time: 2.128
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 0.162815 secs using 199.8% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 21: -1436.860
Optimizing NNI: done in 0.138514 secs using 200.2% CPU
Optimizing NNI: done in 0.074012 secs using 200% CPU
Optimizing NNI: done in 0.0444369 secs using 200.7% CPU
Optimizing NNI: done in 0.0883489 secs using 200.5% CPU
Optimizing NNI: done in 0.0934062 secs using 200.2% CPU
Optimizing NNI: done in 0.057837 secs using 196.8% CPU
Optimizing NNI: done in 0.0765829 secs using 200.5% CPU
Optimizing NNI: done in 0.087414 secs using 199.5% CPU
Optimizing NNI: done in 0.140423 secs using 199.7% CPU
Iteration 30 / LogL: -1436.865 / Time: 0h:0m:3s (0h:0m:10s left)
Optimizing NNI: done in 0.163915 secs using 199.5% CPU
Optimizing NNI: done in 0.0950201 secs using 198.5% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 32: -1436.723
Optimizing NNI: done in 0.182495 secs using 199.4% CPU
Optimizing NNI: done in 0.074296 secs using 200.3% CPU
Optimizing NNI: done in 0.115359 secs using 200.2% CPU
Optimizing NNI: done in 0.11788 secs using 199.9% CPU
Optimizing NNI: done in 0.074976 secs using 199.6% CPU
Optimizing NNI: done in 0.119954 secs using 200% CPU
Optimizing NNI: done in 0.095727 secs using 200.3% CPU
Optimizing NNI: done in 0.131706 secs using 199.3% CPU
Iteration 40 / LogL: -1437.008 / Time: 0h:0m:4s (0h:0m:10s left)
Optimizing NNI: done in 0.0867801 secs using 199.9% CPU
Optimizing NNI: done in 0.115589 secs using 199.4% CPU
Optimizing NNI: done in 0.0947921 secs using 200.1% CPU
Optimizing NNI: done in 0.12232 secs using 199.3% CPU
Optimizing NNI: done in 0.12995 secs using 198.5% CPU
Optimizing NNI: done in 0.160158 secs using 199.4% CPU
Optimizing NNI: done in 0.12842 secs using 200.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 47: -1436.062
Optimizing NNI: done in 0.165017 secs using 199.9% CPU
Optimizing NNI: done in 0.112989 secs using 199.9% CPU
BETTER TREE FOUND at iteration 49: -1436.060
Optimizing NNI: done in 0.155858 secs using 199.7% CPU
Iteration 50 / LogL: -1436.061 / Time: 0h:0m:5s (0h:0m:11s left)
Optimizing NNI: done in 0.112829 secs using 199.9% CPU
BETTER TREE FOUND at iteration 51: -1436.057
Optimizing NNI: done in 0.124243 secs using 199.8% CPU
Optimizing NNI: done in 0.114536 secs using 199.6% CPU
Optimizing NNI: done in 0.0925651 secs using 198.3% CPU
Optimizing NNI: done in 0.176181 secs using 199.5% CPU
Optimizing NNI: done in 0.12025 secs using 199.4% CPU
Optimizing NNI: done in 0.17761 secs using 200.1% CPU
Optimizing NNI: done in 0.123039 secs using 200% CPU
Optimizing NNI: done in 0.100604 secs using 199.4% CPU
Optimizing NNI: done in 0.147182 secs using 199.9% CPU
Iteration 60 / LogL: -1436.063 / Time: 0h:0m:7s (0h:0m:10s left)
Optimizing NNI: done in 0.141832 secs using 200% CPU
Optimizing NNI: done in 0.141165 secs using 199.9% CPU
Optimizing NNI: done in 0.0859282 secs using 200.1% CPU
Optimizing NNI: done in 0.0983069 secs using 199.7% CPU
Optimizing NNI: done in 0.0775721 secs using 199.3% CPU
Optimizing NNI: done in 0.088273 secs using 198.4% CPU
Optimizing NNI: done in 0.134815 secs using 200% CPU
Optimizing NNI: done in 0.145859 secs using 200.1% CPU
Optimizing NNI: done in 0.147859 secs using 200.1% CPU
Optimizing NNI: done in 0.140239 secs using 200.2% CPU
Iteration 70 / LogL: -1441.636 / Time: 0h:0m:8s (0h:0m:9s left)
Optimizing NNI: done in 0.059628 secs using 200.1% CPU
Optimizing NNI: done in 0.0920501 secs using 199.9% CPU
Optimizing NNI: done in 0.095367 secs using 200.4% CPU
Optimizing NNI: done in 0.125986 secs using 198% CPU
Optimizing NNI: done in 0.090199 secs using 199.9% CPU
Optimizing NNI: done in 0.147627 secs using 199.9% CPU
Optimizing NNI: done in 0.0943999 secs using 199.6% CPU
Optimizing NNI: done in 0.0726652 secs using 199.1% CPU
Optimizing NNI: done in 0.0752299 secs using 199.6% CPU
Optimizing NNI: done in 0.0647619 secs using 200.4% CPU
Iteration 80 / LogL: -1446.234 / Time: 0h:0m:9s (0h:0m:8s left)
Optimizing NNI: done in 0.10317 secs using 199.6% CPU
Optimizing NNI: done in 0.090868 secs using 200.1% CPU
Optimizing NNI: done in 0.0748789 secs using 198.8% CPU
Optimizing NNI: done in 0.083694 secs using 200% CPU
Optimizing NNI: done in 0.121988 secs using 199.1% CPU
Optimizing NNI: done in 0.12974 secs using 199.7% CPU
Optimizing NNI: done in 0.0760322 secs using 199.9% CPU
Optimizing NNI: done in 0.044035 secs using 199.9% CPU
Optimizing NNI: done in 0.117521 secs using 200.2% CPU
Optimizing NNI: done in 0.0917439 secs using 199.2% CPU
Iteration 90 / LogL: -1437.111 / Time: 0h:0m:10s (0h:0m:7s left)
Optimizing NNI: done in 0.128878 secs using 200.1% CPU
Optimizing NNI: done in 0.11868 secs using 199.4% CPU
Optimizing NNI: done in 0.15924 secs using 199.7% CPU
Optimizing NNI: done in 0.143179 secs using 199.5% CPU
Optimizing NNI: done in 0.0885239 secs using 199.4% CPU
Optimizing NNI: done in 0.093955 secs using 199.2% CPU
Optimizing NNI: done in 0.088563 secs using 199.4% CPU
Optimizing NNI: done in 0.0781291 secs using 200.6% CPU
Optimizing NNI: done in 0.135229 secs using 199.4% CPU
Optimizing NNI: done in 0.102735 secs using 199.8% CPU
Iteration 100 / LogL: -1436.727 / Time: 0h:0m:11s (0h:0m:5s left)
Optimizing NNI: done in 0.080725 secs using 199.7% CPU
Optimizing NNI: done in 0.111669 secs using 199.3% CPU
Optimizing NNI: done in 0.083174 secs using 197.7% CPU
Optimizing NNI: done in 0.0840061 secs using 200% CPU
Optimizing NNI: done in 0.177817 secs using 199.5% CPU
Optimizing NNI: done in 0.120657 secs using 199% CPU
Optimizing NNI: done in 0.0783591 secs using 200.3% CPU
Optimizing NNI: done in 0.077631 secs using 199.9% CPU
Optimizing NNI: done in 0.119481 secs using 198.8% CPU
Optimizing NNI: done in 0.0968211 secs using 198.9% CPU
Iteration 110 / LogL: -1442.122 / Time: 0h:0m:12s (0h:0m:4s left)
Optimizing NNI: done in 0.143065 secs using 199.7% CPU
Optimizing NNI: done in 0.172693 secs using 199.9% CPU
Optimizing NNI: done in 0.095958 secs using 199.7% CPU
Optimizing NNI: done in 0.110782 secs using 199.3% CPU
Optimizing NNI: done in 0.0929899 secs using 199.9% CPU
Optimizing NNI: done in 0.100791 secs using 199.2% CPU
Optimizing NNI: done in 0.076401 secs using 200.3% CPU
Optimizing NNI: done in 0.0740561 secs using 199.4% CPU
Optimizing NNI: done in 0.0743721 secs using 199.4% CPU
Optimizing NNI: done in 0.0915501 secs using 200.4% CPU
Iteration 120 / LogL: -1441.335 / Time: 0h:0m:13s (0h:0m:3s left)
Optimizing NNI: done in 0.108561 secs using 200.2% CPU
Optimizing NNI: done in 0.12192 secs using 199.6% CPU
Optimizing NNI: done in 0.106328 secs using 199.6% CPU
Optimizing NNI: done in 0.095356 secs using 199% CPU
Optimizing NNI: done in 0.14316 secs using 199.8% CPU
Optimizing NNI: done in 0.123635 secs using 200.3% CPU
Optimizing NNI: done in 0.162931 secs using 199.9% CPU
Optimizing NNI: done in 0.132564 secs using 200.3% CPU
Optimizing NNI: done in 0.136429 secs using 199.6% CPU
Optimizing NNI: done in 0.130371 secs using 199.4% CPU
Iteration 130 / LogL: -1443.066 / Time: 0h:0m:14s (0h:0m:2s left)
Optimizing NNI: done in 0.138883 secs using 199.8% CPU
Optimizing NNI: done in 0.0779788 secs using 199.7% CPU
Optimizing NNI: done in 0.102176 secs using 200.4% CPU
Optimizing NNI: done in 0.0972121 secs using 199.5% CPU
Optimizing NNI: done in 0.0851429 secs using 199.2% CPU
Optimizing NNI: done in 0.0785038 secs using 200.4% CPU
Optimizing NNI: done in 0.132421 secs using 200.2% CPU
Optimizing NNI: done in 0.108342 secs using 199.5% CPU
Optimizing NNI: done in 0.107421 secs using 199.5% CPU
Optimizing NNI: done in 0.0749922 secs using 199.7% CPU
Iteration 140 / LogL: -1437.660 / Time: 0h:0m:15s (0h:0m:1s left)
Optimizing NNI: done in 0.11472 secs using 199.4% CPU
Optimizing NNI: done in 0.074924 secs using 200% CPU
Optimizing NNI: done in 0.10254 secs using 199% CPU
Optimizing NNI: done in 0.0770118 secs using 199.9% CPU
Optimizing NNI: done in 0.105687 secs using 198.4% CPU
Optimizing NNI: done in 0.134538 secs using 200.2% CPU
Optimizing NNI: done in 0.0736449 secs using 199% CPU
Optimizing NNI: done in 0.101538 secs using 199.5% CPU
Optimizing NNI: done in 0.152446 secs using 199.9% CPU
Optimizing NNI: done in 0.0879302 secs using 199.2% CPU
Iteration 150 / LogL: -1436.060 / Time: 0h:0m:16s (0h:0m:0s left)
Optimizing NNI: done in 0.0776889 secs using 200.2% CPU
Optimizing NNI: done in 0.121694 secs using 199.9% CPU
TREE SEARCH COMPLETED AFTER 152 ITERATIONS / Time: 0h:0m:17s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -1436.057
Optimal log-likelihood: -1436.057
Rate parameters:  A-C: 0.41796  A-G: 2.65216  A-T: 1.00000  C-G: 0.41796  C-T: 2.65216  G-T: 1.00000
Base frequencies:  A: 0.166  C: 0.268  G: 0.259  T: 0.308
Gamma shape alpha: 1.709
Parameters optimization took 1 rounds (0.010 sec)
BEST SCORE FOUND : -1436.057
Total tree length: 0.518

Total number of iterations: 152
CPU time used for tree search: 33.949 sec (0h:0m:33s)
Wall-clock time used for tree search: 17.010 sec (0h:0m:17s)
Total CPU time used: 34.223 sec (0h:0m:34s)
Total wall-clock time used: 17.124 sec (0h:0m:17s)

Analysis results written to: 
  IQ-TREE report:                /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta.iqtree
  Maximum-likelihood tree:       /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta.treefile
  Likelihood distances:          /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta.mldist
  Screen log file:               /app/outputs/analyses/606/20250712T034645/between_profile_distances/B/clade_B_seqs.aligned.fasta.log

Date and Time: Fri Jul 11 22:52:25 2025
